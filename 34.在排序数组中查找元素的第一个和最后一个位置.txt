//主要在于分别查找左边界和右边界 
//用一个flag进行统一！ 

class Solution {
public:
    vector<int> searchRange(vector<int>& nums, int target) {
        vector<int> targetRange{-1,-1};
        int leftIdx=bound(nums,target,true);
        if(leftIdx==nums.size()||nums[leftIdx]!=target)
            return targetRange;
        targetRange[0]=leftIdx;
        targetRange[1]=bound(nums,target,false)-1;
        return targetRange;
    }

    int bound(vector<int>& nums,int target,bool flag)
    {
        int l=0,r=nums.size();
        while(l<r)
        {
            int mid=l+(r-l)/2;
            if(nums[mid]>target||(flag&&nums[mid]==target))
                r=mid;
            else
                l=mid+1;
        }
        return l;
    }
};