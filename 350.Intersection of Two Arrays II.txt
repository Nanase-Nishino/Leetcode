class Solution {
public:
    vector<int> intersect(vector<int>& nums1, vector<int>& nums2) {
        unordered_map<int,int> mp;
        for(int x:nums1)
            mp[x]++;
        vector<int> res;
        for(int y:nums2)
        {
            if(mp.count(y))
            {
                res.emplace_back(y);
                mp[y]--;
                if(!mp[y])
                    mp.erase(y);
            }
        }
        return res;
    }
};

class Solution {
public:
    vector<int> intersect(vector<int>& nums1, vector<int>& nums2) {
        sort(nums1.begin(),nums1.end());
        sort(nums2.begin(),nums2.end());
        vector<int> res;
        int i=0, j=0;
        while(i<nums1.size()&&j<nums2.size())
        {
            if(nums1[i]==nums2[j])
            {
                res.emplace_back(nums1[i]);
                i++;
                j++;
            }
            else if(nums1[i]<nums2[j])
                i++;
            else if(nums1[i]>nums2[j])
                j++;
        }
        return res;
    }
};