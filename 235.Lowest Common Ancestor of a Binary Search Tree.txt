/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode(int x) : val(x), left(NULL), right(NULL) {}
 * };
 */

//Recursion
//1. p,q at the same side of the BST. Recursive that side
//2. p,q at the different sides of the BST. return root
//3. p or q at the same point of the root.  return root

class Solution {
public:
    TreeNode* lowestCommonAncestor(TreeNode* root, TreeNode* p, TreeNode* q) {
        if(!root)
            return nullptr;
        if((p->val<root->val&&q->val>root->val)||(p->val>root->val&&q->val<root->val))
            return root;
        else if(p->val<root->val&&q->val<root->val)
            return lowestCommonAncestor(root->left,p,q);
        else if(p->val>root->val&&q->val>root->val)
            return lowestCommonAncestor(root->right,p,q);
        return root;
    }
};