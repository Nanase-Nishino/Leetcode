//基础操作
class Solution {
public:
    ListNode* addTwoNumbers(ListNode* l1, ListNode* l2) {
        ListNode* head=new ListNode(-1);//头结点
        ListNode* h=head;//工作结点
        int flag=0;//进位标志
        while(l1!=NULL||l2!=NULL)
        {
            int sum=0;
            if(l1!=NULL)
            {
                sum+=l1->val;
                l1=l1->next;
            }
            if(l2!=NULL)
            {
                sum+=l2->val;
                l2=l2->next;
            }
            if(flag==1)
                sum++;
            h->next=new ListNode(sum%10);
            h=h->next;
            flag=sum>=10?1:0;
        }
        if(flag==1)
            h->next=new ListNode(1);
        return head->next;
    }
};

将公共和非公共分开处理需要考虑三种或两种情况，代码不够简洁。

//递归
class Solution {
public:
    ListNode* addTwoNumbers(ListNode* l1, ListNode* l2) {
        int sum=l1->val+l2->val;
        ListNode* node=new ListNode(sum%10);
        if(l1->next!=NULL||l2->next!=NULL)
        {
            l1->next=l1->next==NULL?new ListNode(0):l1->next;
            l2->next=l2->next==NULL?new ListNode(0):l2->next;
            l1->next->val+=sum/10;
            node->next=addTwoNumbers(l1->next,l2->next);
        }
        else if(sum>9)
            node->next=new ListNode(1);
        return node;
    }
};