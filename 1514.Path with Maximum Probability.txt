//无向图 邻接表
//dijkstra

class Solution {
public:
    bool visited[10005];//c风格数组应全局变量
    double maxProbability(int n, vector<vector<int>>& edges, vector<double>& s, int start, int end) {
        vector<vector<pair<double,int>>> e(10005);
        for(int i=0;i<edges.size();i++)
        {
            e[edges[i][0]].push_back({s[i],edges[i][1]});
            e[edges[i][1]].push_back({s[i],edges[i][0]});
        }
        vector<double> dis(n+1,0);
        priority_queue<pair<double,int>> q;
        dis[start]=1.0;
        q.push({1.0,start});
        while(!q.empty())
        {
            auto [p,u]=q.top();
            q.pop();
            if(visited[u])
                continue;
            if(u==end)
                break;
            visited[u]=1;
            for(auto [p,v]:e[u])
            {
                dis[v]=max(dis[v],dis[u]*p);//v结点可能已经被经历过 所以需要比较一下
                if(!visited[v])
                    q.push({dis[v],v});
            }
        }
        return dis[end];
    }
};