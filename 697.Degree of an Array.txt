//Map sort by iterator().first

class Solution {
public:
    int findShortestSubArray(vector<int>& nums) {
        unordered_map<int,vector<int>> h_map;
        for(int i=0;i<nums.size();i++)
        {
            if(h_map[nums[i]].empty())
            {
                h_map[nums[i]].emplace_back(1);
                h_map[nums[i]].emplace_back(i);
                h_map[nums[i]].emplace_back(i);
            }
            else
            {
                h_map[nums[i]][0]++;
                h_map[nums[i]][2]=i;
            }
        }
        int minV=0,maxD=0;
        for(const auto& it:h_map)
        {
            if(maxD<it.second[0])
            {
                maxD=it.second[0];
                minV=it.second[2]-it.second[1]+1;
            }
            else if(maxD==it.second[0])
                minV=min(minV,it.second[2]-it.second[1]+1);
        }
        return minV;
    }
};