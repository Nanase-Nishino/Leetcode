class Solution {
    int cnt[10];
    int sum=0;
    set<int> s;
    string ans="";
    int del(int m)
    {
        for(int i=m;i<=9;i+=3) //利用i可以得到最小 
                               //用i+3可以得到余数为1/2的所有数组
        {
            if(cnt[i])
            {
                cnt[i]--;
                return 1;   //在第一次得到时退出
            }            
        }
        return 0;
    }
public:
    string largestMultipleOfThree(vector<int>& d) {
        for(auto x:d)
        {
            cnt[x]++;
            sum+=x;
        }
        if(sum%3==1)
        {
            if(!del(1))
            {
                del(2);
                del(2);
            }            
        }
        if(sum%3==2)
        {
            if(!del(2))
            {
                del(1);
                del(1);
            }
        }
        for(int i=9;i>=0;i--)
        {
            while(cnt[i]!=0)
            {
                cnt[i]--;
                ans+=(i+'0');
                s.insert(i);                
            }
        }
        if(s.size()==1&&s.count(0))//过滤掉0 利用set的去重性
            return "0";
        return ans;
    }
};

