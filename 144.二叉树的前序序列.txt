//µÝ¹é
/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode(int x) : val(x), left(NULL), right(NULL) {}
 * };
 */
class Solution {
public:
    vector<int> inorderTraversal(TreeNode* root) {
        vector<int> v;
        stack<TreeNode*> s;
        TreeNode *p=root;
        while(!s.empty()||p!=NULL)
        {
            while(p!=NULL)
            {
                s.push(p);
                p=p->left;
            }
            TreeNode *q=s.top();
            s.pop();
            v.push_back(q->val);
            p=q->right;
        }
        return v;
    }
};

//µü´ú
/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode(int x) : val(x), left(NULL), right(NULL) {}
 * };
 */
class Solution {
public:
    vector<int> preorderTraversal(TreeNode* root) {
        vector<int> v;
        stack<TreeNode*> s;
        TreeNode *p=root;
        while(!s.empty()||p!=NULL)
        {
            while(p!=NULL)
            {
                s.push(p);
                v.push_back(p->val);
                p=p->left;
            }
            p=s.top();
            s.pop();
            p=p->right;
        }
        return v;
    }
};