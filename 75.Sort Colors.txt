//double pointers
//p0 indicates the position of 0
//p1 indicates the position of 1

class Solution {
public:
    void sortColors(vector<int>& nums) {
        int N=nums.size();
        int ptr0=0;
        int ptr1=0;
        for(int i=0;i<N;i++){
            if(nums[i]==1){
                swap(nums[i],nums[ptr1]);
                ptr1++;
            }
            else if(nums[i]==0){
                swap(nums[i],nums[ptr0]);
                if(ptr0<ptr1){
                    swap(nums[ptr1],nums[i]);
                }
		// renew p0/p1
                ++ptr0;
                ++ptr1;
            }
        }
    }
};

//p0/p2

class Solution {
public:
    void sortColors(vector<int>& nums) {
        int p0=0;
        int p2=nums.size()-1;
        for(int i=0;i<=p2;i++){
            //nums[i]=nums[p2]=0
            while(i<=p2&&nums[i]==2){
                swap(nums[i],nums[p2]);
                p2--;
            }
            if(nums[i]==0){
                swap(nums[i],nums[p0]);
                p0++;
            }
        }
    }
};
};