//字符串实现矩形坐标的存储 用哈希表存储对应关系

//设置一个history数组，记录每次更新的信息。
//在getValue中，倒序查找history。若坐标包含在某一次更新中，直接返回更新指。
//否则，返回原始矩阵中这个位置的值。
//update->O(1) getValue->O(k) k为更新的次数
//在小矩阵且超多调用时，这个解法是劣势。


class SubrectangleQueries {
private:
    vector<vector<int>> rec;
    vector<vector<int>> history;
public:
    SubrectangleQueries(vector<vector<int>>& rectangle) :rec(rectangle){

    }
    
    void updateSubrectangle(int row1, int col1, int row2, int col2, int newValue) {
        history.emplace_back(vector<int>{row1,col1,row2,col2,newValue});
    }
    
    int getValue(int row, int col) {
        for(int i=history.size()-1;i>=0;i--)
        {
            if(history[i][0]<=row&&row<=history[i][2]&&history[i][1]<=col&&col<=history[i][3])
                return history[i][4];
        }
        return rec[row][col];
    }
};

/**
 * Your SubrectangleQueries object will be instantiated and called as such:
 * SubrectangleQueries* obj = new SubrectangleQueries(rectangle);
 * obj->updateSubrectangle(row1,col1,row2,col2,newValue);
 * int param_2 = obj->getValue(row,col);
 */