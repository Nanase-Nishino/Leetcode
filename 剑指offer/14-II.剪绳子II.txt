//快速幂
//base^11
//11=2^0+2^1+2^3
//当指数的当前二进制位为1时 则要进行累积
//当指数的当前二进制位为0时 说明不需要做贡献

class Solution {
private:
    int _pow(int b,int mul)
    {
        long long res=1;
        long long x=3;
        while(b>0)
        {
            if(b&1)
                res=(res*x)%(int)(1e9+7);
            x=(x*x)%(int)(1e9+7);
            b>>=1;
        }
        return res*mul%(int)(1e9+7);
    }
public:
    int cuttingRope(int n) {
        if(n<=3)
            return n-1;
        int a=n%3;
        int b=n/3;
        if(a==0)
            return _pow(b,1);
        if(a==1)
            return _pow(b-1,4);
        return _pow(b,2);
    }
};