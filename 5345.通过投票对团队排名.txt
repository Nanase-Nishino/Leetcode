class Solution {
public:
    string rankTeams(vector<string>& votes) {
        int N=votes.size();
        string res=votes[0];
        unordered_map<char,unordered_map<int,int>> f;
        for(string s:votes)
            for(int i=0;i<s.size();i++)
                f[s[i]][i]++;
        sort(res.begin(),res.end(),[&](char a,char b)->bool
        {
            for(int i=0;i<res.size();i++)
            {
                if(f[a][i]>f[b][i])
                    return 1;
                if(f[a][i]<f[b][i])
                    return 0;
            }
            return a<b;
        });
        return res;
    }
};


class Solution {
public:
    string rankTeams(vector<string>& votes) {
        vector<vector<int>> v(27,vector<int>(27,0));
        for(string s:votes)
            for(int i=0;i<s.size();i++)
            {
                v[s[i]-'A'][i]++;
                v[s[i]-'A'].back()=26-(s[i]-'A');
            }
        sort(v.begin(),v.end(),greater<vector<int>>());
        string res;
        for(int i=0;i<v.size();i++)
        {
            if(v[i].back()!=0)
                res.push_back(26-v[i].back()+'A');
        }
        return res;
    }
};