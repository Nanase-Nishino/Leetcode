//二分->单调性！！！
//若第mid天满足 那么大于mid天的天数都满足条件 所以可以用二分

class Solution {
private:
    bool check(vector<int>& bloomDay,int m,int k,int mid)
    {
        int N=bloomDay.size(),len=0,cnt=0;
        for(int i=0;i<N;i++)
        {
            if(bloomDay[i]<=mid)
            {
                len++;
                if(len==k)
                {
                    cnt++;
                    len=0;
                }
            }
            else
                len=0;
        }
        return cnt>=m;
    }
public:
    int minDays(vector<int>& bloomDay, int m, int k) {
        int l=0,r=*max_element(bloomDay.begin(),bloomDay.end()),ans=-1;
        while(l<=r)
        {
            int mid=l+(r-l)/2;
            if(check(bloomDay,m,k,mid))
            {
                ans=mid;
                r=mid-1;
            }
            else
                l=mid+1;
        }
        return ans;
    }
};