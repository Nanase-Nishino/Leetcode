//判断位置 
//固定rec2的位置,若没有重叠,则rec1在rec2的左侧,右侧,上侧,下侧,判断位置
class Solution {
public:
    bool isRectangleOverlap(vector<int>& rec1, vector<int>& rec2) {
        return !(
            rec1[2]<=rec2[0]|| //rec1在rec2左侧
            rec1[0]>=rec2[2]|| //右侧
            rec1[1]>=rec2[3]|| //上侧
            rec1[3]<=rec2[1]   //下侧
        );
    }
};

//检查区域 若两个矩形重叠 则重叠区域一定是一个矩形
//代表了两个矩形与x轴平行的边投影到x轴会有交集
//代表了两个矩形与y轴平行的边投影到y轴会有交集
class Solution {
public:
    bool isRectangleOverlap(vector<int>& rec1, vector<int>& rec2) {
        return (min(rec1[2],rec2[2])>max(rec1[0],rec2[0]))&&(min(rec1[3],rec2[3])>max(rec1[1],rec2[1]));
    }
};