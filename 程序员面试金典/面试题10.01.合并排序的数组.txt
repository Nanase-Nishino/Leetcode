class Solution {
public:
    void merge(vector<int>& A, int m, vector<int>& B, int n) {
        for(int i=0;i<n;i++)
            A[m+i]=B[i];
        sort(A.begin(),A.end());
    }
};

//双指针 时间空间均为O(m+n)
class Solution {
public:
    void merge(vector<int>& A, int m, vector<int>& B, int n) {
        int pa=0,pb=0,cur;
        vector<int> sorted(m+n);
        while(pa<m||pb<n)
        {
            if(pa==m)
                cur=B[pb++];
            else if(pb==n)
                cur=A[pa++];
            else if(A[pa]<B[pb])
                cur=A[pa++];
            else
                cur=B[pb++];
            sorted[pa+pb-1]=cur;
        }
        for(int i=0;i<m+n;i++)
            A[i]=sorted[i];
    }
};

//后序双指针 时间O(m+n) 空间O(1)
class Solution {
public:
    void merge(vector<int>& A, int m, vector<int>& B, int n) {
        int pa=m-1,pb=n-1,tail=m+n-1,cur;
        while(pa>=0||pb>=0)
        {
            if(pa==-1)
                cur=B[pb--];
            else if(pb==-1)
                cur=A[pa--];
            else if(A[pa]<B[pb])
                cur=B[pb--];
            else 
                cur=A[pa--];
            A[tail--]=cur;
        }
    }
};