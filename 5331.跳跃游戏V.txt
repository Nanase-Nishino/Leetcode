//dp
class Solution {
public:
    int maxJumps(vector<int>& arr, int d) {
        int n=arr.size();
        vector<pair<int,int>> v(n);
        for(int i=0;i<n;i++)
          v[i]={arr[i],i};
        sort(v.begin(),v.end());

        vector<int> dp(n);
        int res=1;
        for(int i=0;i<n;i++)
        {
            int index=v[i].second;
            dp[index]=1;
            for(int j=index-1;j>=index-d&&j>=0;j--)
            {
                if(arr[j]>=arr[index])
                  break;
                if(dp[j]!=0)
                  dp[index]=max(dp[index],dp[j]+1);
            }
            for(int j=index+1;j<=index+d&&j<n;j++)
            {
                if(arr[j]>=arr[index])
                  break;
                if(dp[j]!=0)
                  dp[index]=max(dp[index],dp[j]+1);
            }
            res=max(dp[index],res);
        }
        return res;
    }
};