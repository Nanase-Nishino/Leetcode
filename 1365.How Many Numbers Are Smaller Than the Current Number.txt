class Solution {
public:
    vector<int> smallerNumbersThanCurrent(vector<int>& nums) {

        int N=nums.size();
        vector<int> v;
        for(int i=0;i<N;i++)
        {
            int cnt=0;
            for(int j=0;j<N;j++)
            {
                if(nums[i]>nums[j])
                    cnt++;
            }
            v.push_back(cnt);
        }
        return v;
    }
};

//快排

class Solution {
public:
    vector<int> smallerNumbersThanCurrent(vector<int>& nums) {
        vector<pair<int,int>> v;
        for(int i=0;i<nums.size();i++){
            v.emplace_back(nums[i],i);
        }
        sort(v.begin(),v.end());
        vector<int> Sol(nums.size(),0);
        int pre=-1;
        for(int i=0;i<v.size();i++){
            if(pre==-1||v[i].first!=v[i-1].first)
                pre=i;
            Sol[v[i].second]=pre;
        }
        return Sol;
    }
};

//计数排序

class Solution {
public:
    vector<int> smallerNumbersThanCurrent(vector<int>& nums) {
        vector<int> cnt(101,0);
        for(int i=0;i<nums.size();i++){
            cnt[nums[i]]++;
        }
        for(int i=1;i<cnt.size();i++){
            cnt[i]+=cnt[i-1];
        }
        vector<int> Sol;
        for(int i=0;i<nums.size();i++){
            //当nums[i]==0时 有可能为首位/前面都为0
            Sol.emplace_back(nums[i]==0?0:cnt[nums[i]-1]);
        }
        return Sol;
    }
};