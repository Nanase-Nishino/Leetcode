/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode(int x) : val(x), left(NULL), right(NULL) {}
 * };
 */

//前序遍历
//会有大量重复计算

class Solution {
public:
    int DFS(TreeNode* x)
    {
        if(!x)
            return -1;
        return 1+max(DFS(x->left),DFS(x->right));
    }
    bool isBalanced(TreeNode* root) {
        if(!root)
            return true;
        return abs(DFS(root->left)-DFS(root->right))<2&&isBalanced(root->left)&&isBalanced(root->right);
    }
};

//后序遍历+剪枝

class Solution {
private:
    int dfs(TreeNode* root)
    {
        if(!root)
            return 0;
        int L=dfs(root->left);
        //剪枝
        if(L==-1)
            return -1;
        int R=dfs(root->right);
        if(R==-1)
            return -1;
	//后序遍历 在左右根
        return abs(L-R)<2?max(L,R)+1:-1;
    }
public:
    bool isBalanced(TreeNode* root) {
        return dfs(root)!=-1;
    }
};