class Solution {
public:
    bool checkSubarraySum(vector<int>& nums, int k) {
        if(k==0)
        {
            for(int i=1;i<nums.size();i++)
                if(nums[i]==0&&nums[i-1]==0)
                    return true;
            return false;
        }
        k=abs(k);
        //若k=-6 且存在子数组是6的倍数 一定是-6的倍数
        unordered_set<int> s{0};
        //记录出现过的前n项和 初始化s 否则{1,2,1,2}，k=6不会有正确结果
        int cur=nums[0]%k;
        int pre;
        for(int i=1;i<nums.size();i++)
        {
            pre=cur;
            cur=(cur+nums[i])%k;
            if(s.count(cur))
                return true;
            s.insert(pre);
            //延迟插入 保证数组大小至少为2
        }
        return false;
    }
};